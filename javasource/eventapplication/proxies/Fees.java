// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package eventapplication.proxies;

public class Fees
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject feesMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EventApplication.Fees";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Account_Name("Account_Name"),
		Due_Amount("Due_Amount"),
		Paid_Amount("Paid_Amount");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Fees(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EventApplication.Fees"));
	}

	protected Fees(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject feesMendixObject)
	{
		if (feesMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EventApplication.Fees", feesMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EventApplication.Fees");

		this.feesMendixObject = feesMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Fees.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static eventapplication.proxies.Fees initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return eventapplication.proxies.Fees.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static eventapplication.proxies.Fees initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new eventapplication.proxies.Fees(context, mendixObject);
	}

	public static eventapplication.proxies.Fees load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return eventapplication.proxies.Fees.initialize(context, mendixObject);
	}

	public static java.util.List<eventapplication.proxies.Fees> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<eventapplication.proxies.Fees> result = new java.util.ArrayList<eventapplication.proxies.Fees>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EventApplication.Fees" + xpathConstraint))
			result.add(eventapplication.proxies.Fees.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Account_Name
	 */
	public final java.lang.String getAccount_Name()
	{
		return getAccount_Name(getContext());
	}

	/**
	 * @param context
	 * @return value of Account_Name
	 */
	public final java.lang.String getAccount_Name(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Account_Name.toString());
	}

	/**
	 * Set value of Account_Name
	 * @param account_name
	 */
	public final void setAccount_Name(java.lang.String account_name)
	{
		setAccount_Name(getContext(), account_name);
	}

	/**
	 * Set value of Account_Name
	 * @param context
	 * @param account_name
	 */
	public final void setAccount_Name(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String account_name)
	{
		getMendixObject().setValue(context, MemberNames.Account_Name.toString(), account_name);
	}

	/**
	 * @return value of Due_Amount
	 */
	public final java.lang.String getDue_Amount()
	{
		return getDue_Amount(getContext());
	}

	/**
	 * @param context
	 * @return value of Due_Amount
	 */
	public final java.lang.String getDue_Amount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Due_Amount.toString());
	}

	/**
	 * Set value of Due_Amount
	 * @param due_amount
	 */
	public final void setDue_Amount(java.lang.String due_amount)
	{
		setDue_Amount(getContext(), due_amount);
	}

	/**
	 * Set value of Due_Amount
	 * @param context
	 * @param due_amount
	 */
	public final void setDue_Amount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String due_amount)
	{
		getMendixObject().setValue(context, MemberNames.Due_Amount.toString(), due_amount);
	}

	/**
	 * @return value of Paid_Amount
	 */
	public final java.lang.String getPaid_Amount()
	{
		return getPaid_Amount(getContext());
	}

	/**
	 * @param context
	 * @return value of Paid_Amount
	 */
	public final java.lang.String getPaid_Amount(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Paid_Amount.toString());
	}

	/**
	 * Set value of Paid_Amount
	 * @param paid_amount
	 */
	public final void setPaid_Amount(java.lang.String paid_amount)
	{
		setPaid_Amount(getContext(), paid_amount);
	}

	/**
	 * Set value of Paid_Amount
	 * @param context
	 * @param paid_amount
	 */
	public final void setPaid_Amount(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String paid_amount)
	{
		getMendixObject().setValue(context, MemberNames.Paid_Amount.toString(), paid_amount);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return feesMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final eventapplication.proxies.Fees that = (eventapplication.proxies.Fees) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EventApplication.Fees";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
