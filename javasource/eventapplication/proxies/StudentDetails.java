// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package eventapplication.proxies;

public class StudentDetails
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject studentDetailsMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "EventApplication.StudentDetails";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Student_Name("Student_Name"),
		Student_mail("Student_mail"),
		Student_Class("Student_Class"),
		StudentDetails_Registrant("EventApplication.StudentDetails_Registrant");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public StudentDetails(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "EventApplication.StudentDetails"));
	}

	protected StudentDetails(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject studentDetailsMendixObject)
	{
		if (studentDetailsMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("EventApplication.StudentDetails", studentDetailsMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a EventApplication.StudentDetails");

		this.studentDetailsMendixObject = studentDetailsMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'StudentDetails.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static eventapplication.proxies.StudentDetails initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return eventapplication.proxies.StudentDetails.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static eventapplication.proxies.StudentDetails initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new eventapplication.proxies.StudentDetails(context, mendixObject);
	}

	public static eventapplication.proxies.StudentDetails load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return eventapplication.proxies.StudentDetails.initialize(context, mendixObject);
	}

	public static java.util.List<eventapplication.proxies.StudentDetails> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<eventapplication.proxies.StudentDetails> result = new java.util.ArrayList<eventapplication.proxies.StudentDetails>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//EventApplication.StudentDetails" + xpathConstraint))
			result.add(eventapplication.proxies.StudentDetails.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Student_Name
	 */
	public final java.lang.String getStudent_Name()
	{
		return getStudent_Name(getContext());
	}

	/**
	 * @param context
	 * @return value of Student_Name
	 */
	public final java.lang.String getStudent_Name(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Student_Name.toString());
	}

	/**
	 * Set value of Student_Name
	 * @param student_name
	 */
	public final void setStudent_Name(java.lang.String student_name)
	{
		setStudent_Name(getContext(), student_name);
	}

	/**
	 * Set value of Student_Name
	 * @param context
	 * @param student_name
	 */
	public final void setStudent_Name(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String student_name)
	{
		getMendixObject().setValue(context, MemberNames.Student_Name.toString(), student_name);
	}

	/**
	 * @return value of Student_mail
	 */
	public final java.lang.String getStudent_mail()
	{
		return getStudent_mail(getContext());
	}

	/**
	 * @param context
	 * @return value of Student_mail
	 */
	public final java.lang.String getStudent_mail(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Student_mail.toString());
	}

	/**
	 * Set value of Student_mail
	 * @param student_mail
	 */
	public final void setStudent_mail(java.lang.String student_mail)
	{
		setStudent_mail(getContext(), student_mail);
	}

	/**
	 * Set value of Student_mail
	 * @param context
	 * @param student_mail
	 */
	public final void setStudent_mail(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String student_mail)
	{
		getMendixObject().setValue(context, MemberNames.Student_mail.toString(), student_mail);
	}

	/**
	 * @return value of Student_Class
	 */
	public final java.lang.String getStudent_Class()
	{
		return getStudent_Class(getContext());
	}

	/**
	 * @param context
	 * @return value of Student_Class
	 */
	public final java.lang.String getStudent_Class(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Student_Class.toString());
	}

	/**
	 * Set value of Student_Class
	 * @param student_class
	 */
	public final void setStudent_Class(java.lang.String student_class)
	{
		setStudent_Class(getContext(), student_class);
	}

	/**
	 * Set value of Student_Class
	 * @param context
	 * @param student_class
	 */
	public final void setStudent_Class(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String student_class)
	{
		getMendixObject().setValue(context, MemberNames.Student_Class.toString(), student_class);
	}

	/**
	 * @return value of StudentDetails_Registrant
	 */
	public final eventapplication.proxies.Registrant getStudentDetails_Registrant() throws com.mendix.core.CoreException
	{
		return getStudentDetails_Registrant(getContext());
	}

	/**
	 * @param context
	 * @return value of StudentDetails_Registrant
	 */
	public final eventapplication.proxies.Registrant getStudentDetails_Registrant(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		eventapplication.proxies.Registrant result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.StudentDetails_Registrant.toString());
		if (identifier != null)
			result = eventapplication.proxies.Registrant.load(context, identifier);
		return result;
	}

	/**
	 * Set value of StudentDetails_Registrant
	 * @param studentdetails_registrant
	 */
	public final void setStudentDetails_Registrant(eventapplication.proxies.Registrant studentdetails_registrant)
	{
		setStudentDetails_Registrant(getContext(), studentdetails_registrant);
	}

	/**
	 * Set value of StudentDetails_Registrant
	 * @param context
	 * @param studentdetails_registrant
	 */
	public final void setStudentDetails_Registrant(com.mendix.systemwideinterfaces.core.IContext context, eventapplication.proxies.Registrant studentdetails_registrant)
	{
		if (studentdetails_registrant == null)
			getMendixObject().setValue(context, MemberNames.StudentDetails_Registrant.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.StudentDetails_Registrant.toString(), studentdetails_registrant.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return studentDetailsMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final eventapplication.proxies.StudentDetails that = (eventapplication.proxies.StudentDetails) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "EventApplication.StudentDetails";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
